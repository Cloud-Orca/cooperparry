<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <decisions>
        <name>Other_hide_records_found</name>
        <label>Other hide records found?</label>
        <locationX>182</locationX>
        <locationY>611</locationY>
        <defaultConnector>
            <targetReference>Delete_all_manual_AccountShare_records</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>No</defaultConnectorLabel>
        <rules>
            <name>Yes_other_hide_records</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_other_Hide_Records</leftValueReference>
                <operator>IsEmpty</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Insert_New_Sharing_records_for_the_deleted_record</targetReference>
            </connector>
            <label>Yes, other hide records</label>
        </rules>
    </decisions>
    <decisions>
        <name>VIP_Account</name>
        <label>VIP Account?</label>
        <locationX>512</locationX>
        <locationY>395</locationY>
        <defaultConnectorLabel>yes</defaultConnectorLabel>
        <rules>
            <name>No</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.CT_Account_access__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <stringValue>VIP Account</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Get_other_Hide_Records</targetReference>
            </connector>
            <label>No</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>CT Handle Delete Action {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CT Handle Delete Action</label>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Insert_New_Sharing_records_for_the_deleted_record</name>
        <label>Insert New Sharing records for the deleted record</label>
        <locationX>50</locationX>
        <locationY>719</locationY>
        <connector>
            <targetReference>Recalculate_Access</targetReference>
        </connector>
        <inputAssignments>
            <field>AccountAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>AccountId</field>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>OpportunityAccessLevel</field>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>RowCause</field>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>UserOrGroupId</field>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </inputAssignments>
        <object>AccountShare</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordCreates>
    <recordDeletes>
        <name>Delete_all_manual_AccountShare_records</name>
        <label>Delete all manual AccountShare records</label>
        <locationX>314</locationX>
        <locationY>719</locationY>
        <connector>
            <targetReference>Set_Account_to_Public_access</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Set_Account_to_Public_access</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RowCause</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </filters>
        <object>AccountShare</object>
    </recordDeletes>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>512</locationX>
        <locationY>287</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>VIP_Account</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_other_Hide_Records</name>
        <label>Get other Hide Records</label>
        <locationX>182</locationX>
        <locationY>503</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Other_hide_records_found</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Account__c</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>User__c</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Hide_Account_For_User__c</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordUpdates>
        <name>Recalculate_Access</name>
        <label>Recalculate Access</label>
        <locationX>50</locationX>
        <locationY>827</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>CT_Recalculate_Access__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Account_to_Public_access</name>
        <label>Set Account to &quot;Public access&quot;</label>
        <locationX>314</locationX>
        <locationY>827</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CT_Account_access__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Public access with restrictions</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>CT_Account_access__c</field>
            <value>
                <stringValue>Public access</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CT_Recalculate_Access__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>386</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>Get_Account</targetReference>
        </connector>
        <object>Hide_Account_For_User__c</object>
        <recordTriggerType>Delete</recordTriggerType>
        <triggerType>RecordBeforeDelete</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AccountShareRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>newRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>profileIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserAccessRecordID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
