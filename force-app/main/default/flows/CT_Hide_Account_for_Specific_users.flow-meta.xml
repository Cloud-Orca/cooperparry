<?xml version="1.0" encoding="UTF-8"?>
<Flow xmlns="http://soap.sforce.com/2006/04/metadata">
    <apiVersion>61.0</apiVersion>
    <assignments>
        <name>Add_Sharing</name>
        <label>Add Sharing</label>
        <locationX>1282</locationX>
        <locationY>1595</locationY>
        <assignmentItems>
            <assignToReference>newRecord.AccountId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRecord.UserOrGroupId</assignToReference>
            <operator>Assign</operator>
            <value>
                <elementReference>Create_Sharing_Record.Id</elementReference>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRecord.AccountAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRecord.OpportunityAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRecord.ContactAccessLevel</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Edit</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>newRecord.RowCause</assignToReference>
            <operator>Assign</operator>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </assignmentItems>
        <assignmentItems>
            <assignToReference>AccountShareRecords</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>newRecord</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>Create_Sharing_Record</targetReference>
        </connector>
    </assignments>
    <assignments>
        <name>Add_to_profile_list</name>
        <label>Add to profile list</label>
        <locationX>1282</locationX>
        <locationY>1187</locationY>
        <assignmentItems>
            <assignToReference>profileIds</assignToReference>
            <operator>Add</operator>
            <value>
                <elementReference>For_All_Profiles.Id</elementReference>
            </value>
        </assignmentItems>
        <connector>
            <targetReference>For_All_Profiles</targetReference>
        </connector>
    </assignments>
    <customErrors>
        <name>Custom_Error_Message_1</name>
        <label>Custom Error Message 1</label>
        <locationX>50</locationX>
        <locationY>431</locationY>
        <customErrorMessages>
            <errorMessage>The record can&apos;t be changed. Please delete the record and create a new one if you want to change the access to this account</errorMessage>
            <isFieldError>false</isFieldError>
        </customErrorMessages>
    </customErrors>
    <decisions>
        <name>Account_Access_Type</name>
        <label>Account Access Type</label>
        <locationX>743</locationX>
        <locationY>539</locationY>
        <defaultConnector>
            <targetReference>Get_UserRecordAccess</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Ignore_This_is_a_VIP_account</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.CT_Account_access__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>VIP Account</stringValue>
                </rightValue>
            </conditions>
            <label>Ignore-This is a VIP account</label>
        </rules>
    </decisions>
    <decisions>
        <name>Did_the_user_have_access</name>
        <label>Did the user have access?</label>
        <locationX>1172</locationX>
        <locationY>755</locationY>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>yes_user_has_access</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>UserAccessRecordID</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Was_the_account_hidden_already</targetReference>
            </connector>
            <label>yes, user has access</label>
        </rules>
    </decisions>
    <decisions>
        <name>Was_the_account_hidden_already</name>
        <label>Was the account hidden already?</label>
        <locationX>886</locationX>
        <locationY>863</locationY>
        <defaultConnector>
            <targetReference>Get_Non_Admin_Profiles</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>Default Outcome</defaultConnectorLabel>
        <rules>
            <name>Yes_washidden</name>
            <conditionLogic>and</conditionLogic>
            <conditions>
                <leftValueReference>Get_Account.CT_Account_access__c</leftValueReference>
                <operator>EqualTo</operator>
                <rightValue>
                    <stringValue>Public access with restrictions</stringValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Delete_the_sharing_record_for_the_user</targetReference>
            </connector>
            <label>Yes</label>
        </rules>
    </decisions>
    <decisions>
        <name>was_the_user_or_account_changed</name>
        <label>was the user or account changed?</label>
        <locationX>396</locationX>
        <locationY>323</locationY>
        <defaultConnector>
            <targetReference>Get_Account</targetReference>
        </defaultConnector>
        <defaultConnectorLabel>no</defaultConnectorLabel>
        <rules>
            <name>yes_changed</name>
            <conditionLogic>(1 AND 2) OR (3 and 4)</conditionLogic>
            <conditions>
                <leftValueReference>$Record.Account__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.Account__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.Account__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record.User__c</leftValueReference>
                <operator>NotEqualTo</operator>
                <rightValue>
                    <elementReference>$Record__Prior.User__c</elementReference>
                </rightValue>
            </conditions>
            <conditions>
                <leftValueReference>$Record__Prior.User__c</leftValueReference>
                <operator>IsNull</operator>
                <rightValue>
                    <booleanValue>false</booleanValue>
                </rightValue>
            </conditions>
            <connector>
                <targetReference>Custom_Error_Message_1</targetReference>
            </connector>
            <label>yes, changed</label>
        </rules>
    </decisions>
    <environments>Default</environments>
    <interviewLabel>CT Hide Account for Specific users {!$Flow.CurrentDateTime}</interviewLabel>
    <label>CT Hide Account for Specific users</label>
    <loops>
        <name>Create_Sharing_Record</name>
        <label>Create Sharing Record</label>
        <locationX>1194</locationX>
        <locationY>1487</locationY>
        <collectionReference>Get_All_Active_Non_Admin_users</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_Sharing</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Save_New_shares</targetReference>
        </noMoreValuesConnector>
    </loops>
    <loops>
        <name>For_All_Profiles</name>
        <label>For All Profiles</label>
        <locationX>1194</locationX>
        <locationY>1079</locationY>
        <collectionReference>Get_Non_Admin_Profiles</collectionReference>
        <iterationOrder>Asc</iterationOrder>
        <nextValueConnector>
            <targetReference>Add_to_profile_list</targetReference>
        </nextValueConnector>
        <noMoreValuesConnector>
            <targetReference>Get_All_Active_Non_Admin_users</targetReference>
        </noMoreValuesConnector>
    </loops>
    <processMetadataValues>
        <name>BuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>CanvasMode</name>
        <value>
            <stringValue>AUTO_LAYOUT_CANVAS</stringValue>
        </value>
    </processMetadataValues>
    <processMetadataValues>
        <name>OriginBuilderType</name>
        <value>
            <stringValue>LightningFlowBuilder</stringValue>
        </value>
    </processMetadataValues>
    <processType>AutoLaunchedFlow</processType>
    <recordCreates>
        <name>Save_New_shares</name>
        <label>Save New shares</label>
        <locationX>1194</locationX>
        <locationY>1787</locationY>
        <connector>
            <targetReference>Set_Account_to_Public_access_with_restrictions</targetReference>
        </connector>
        <inputReference>AccountShareRecords</inputReference>
    </recordCreates>
    <recordDeletes>
        <name>Delete_the_sharing_record_for_the_user</name>
        <label>Delete the sharing record for the user</label>
        <locationX>578</locationX>
        <locationY>971</locationY>
        <connector>
            <targetReference>Recalculate_Account_Access</targetReference>
        </connector>
        <faultConnector>
            <isGoTo>true</isGoTo>
            <targetReference>Recalculate_Account_Access</targetReference>
        </faultConnector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>AccountId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>UserOrGroupId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RowCause</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Manual</stringValue>
            </value>
        </filters>
        <object>AccountShare</object>
    </recordDeletes>
    <recordLookups>
        <name>Get_Account</name>
        <label>Get Account</label>
        <locationX>743</locationX>
        <locationY>431</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Account_Access_Type</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>true</getFirstRecordOnly>
        <object>Account</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_All_Active_Non_Admin_users</name>
        <label>Get All Active Non Admin users</label>
        <locationX>1194</locationX>
        <locationY>1379</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Create_Sharing_Record</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>IsActive</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <filters>
            <field>ProfileId</field>
            <operator>In</operator>
            <value>
                <elementReference>profileIds</elementReference>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>NotEqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>User</object>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_Non_Admin_Profiles</name>
        <label>Get Non Admin Profiles</label>
        <locationX>1194</locationX>
        <locationY>971</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>For_All_Profiles</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserType</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Standard</stringValue>
            </value>
        </filters>
        <filters>
            <field>PermissionsViewAllData</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>false</booleanValue>
            </value>
        </filters>
        <getFirstRecordOnly>false</getFirstRecordOnly>
        <object>Profile</object>
        <queriedFields>Id</queriedFields>
        <storeOutputAutomatically>true</storeOutputAutomatically>
    </recordLookups>
    <recordLookups>
        <name>Get_UserRecordAccess</name>
        <label>Get UserRecordAccess</label>
        <locationX>1172</locationX>
        <locationY>647</locationY>
        <assignNullValuesIfNoRecordsFound>false</assignNullValuesIfNoRecordsFound>
        <connector>
            <targetReference>Did_the_user_have_access</targetReference>
        </connector>
        <filterLogic>and</filterLogic>
        <filters>
            <field>UserId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.User__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>RecordId</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <filters>
            <field>HasReadAccess</field>
            <operator>EqualTo</operator>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </filters>
        <object>UserRecordAccess</object>
        <outputAssignments>
            <assignToReference>UserAccessRecordID</assignToReference>
            <field>RecordId</field>
        </outputAssignments>
    </recordLookups>
    <recordUpdates>
        <name>Recalculate_Account_Access</name>
        <label>Recalculate Account Access</label>
        <locationX>578</locationX>
        <locationY>1079</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>Get_Account.Id</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>CT_Recalculate_Access__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <recordUpdates>
        <name>Set_Account_to_Public_access_with_restrictions</name>
        <label>Set Account to &quot;Public access with restrictions&quot;</label>
        <locationX>1194</locationX>
        <locationY>1895</locationY>
        <filterLogic>and</filterLogic>
        <filters>
            <field>CT_Account_access__c</field>
            <operator>EqualTo</operator>
            <value>
                <stringValue>Public access</stringValue>
            </value>
        </filters>
        <filters>
            <field>Id</field>
            <operator>EqualTo</operator>
            <value>
                <elementReference>$Record.Account__c</elementReference>
            </value>
        </filters>
        <inputAssignments>
            <field>CT_Account_access__c</field>
            <value>
                <stringValue>Public access with restrictions</stringValue>
            </value>
        </inputAssignments>
        <inputAssignments>
            <field>CT_Recalculate_Access__c</field>
            <value>
                <booleanValue>true</booleanValue>
            </value>
        </inputAssignments>
        <object>Account</object>
    </recordUpdates>
    <start>
        <locationX>270</locationX>
        <locationY>0</locationY>
        <connector>
            <targetReference>was_the_user_or_account_changed</targetReference>
        </connector>
        <object>Hide_Account_For_User__c</object>
        <recordTriggerType>CreateAndUpdate</recordTriggerType>
        <triggerType>RecordAfterSave</triggerType>
    </start>
    <status>Active</status>
    <variables>
        <name>AccountShareRecords</name>
        <dataType>SObject</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>newRecord</name>
        <dataType>SObject</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
        <objectType>AccountShare</objectType>
    </variables>
    <variables>
        <name>profileIds</name>
        <dataType>String</dataType>
        <isCollection>true</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
    <variables>
        <name>UserAccessRecordID</name>
        <dataType>String</dataType>
        <isCollection>false</isCollection>
        <isInput>false</isInput>
        <isOutput>false</isOutput>
    </variables>
</Flow>
